{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mary\\\\Downloads\\\\innova-iot-dashboard-v17\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { Chart as ChartJS, LineElement, CategoryScale, LinearScale, PointElement } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport logo from './logo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(LineElement, CategoryScale, LinearScale, PointElement);\nfunction App() {\n  _s();\n  const [sensors, setSensors] = useState([]);\n  const filteredSensors = sensors.filter(s => s.zone === selectedZone);\n  const [alerts, setAlerts] = useState([]);\n  const [selectedZone, setSelectedZone] = useState('AlmacÃ©n A');\n  const [tempHistory, setTempHistory] = useState([]);\n  const [displayedRows, setDisplayedRows] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const res = await fetch('http://localhost:3000/api/sensors');\n      const data = await res.json();\n      setSensors(data);\n      const temp = data.find(s => s.sensor_id === 'Temp_01');\n      if (temp) {\n        setTempHistory(prev => {\n          const updated = [...prev, {\n            value: temp.value,\n            time: new Date(temp.timestamp).toLocaleTimeString()\n          }];\n          return updated.slice(-10);\n        });\n      }\n    };\n    const fetchAlerts = async () => {\n      const res = await fetch('http://localhost:3000/api/alerts');\n      const data = await res.json();\n      setAlerts(data);\n    };\n    const updateDisplayedRows = async () => {\n      const res = await fetch('http://localhost:3000/api/sensors');\n      const data = await res.json();\n      const recent = data.filter(s => ['Temp_01', 'Vib_01', 'Hum_01'].includes(s.sensor_id)).map(s => ({\n        id: s.sensor_id,\n        value: s.value,\n        unit: s.unit,\n        time: new Date(s.timestamp).toLocaleTimeString()\n      }));\n      setDisplayedRows(recent.slice(0, 3));\n    };\n    fetchData();\n    fetchAlerts();\n    updateDisplayedRows();\n    const sensorInterval = setInterval(fetchData, 5000);\n    const alertInterval = setInterval(fetchAlerts, 5000);\n    const historyInterval = setInterval(updateDisplayedRows, 30000);\n    return () => {\n      clearInterval(sensorInterval);\n      clearInterval(alertInterval);\n      clearInterval(historyInterval);\n    };\n  }, []);\n  const tempChartData = {\n    labels: tempHistory.map(d => d.time),\n    datasets: [{\n      label: 'Temp_01',\n      data: tempHistory.map(d => d.value),\n      borderColor: 'rgba(54, 162, 235, 1)',\n      backgroundColor: 'rgba(54, 162, 235, 0.2)',\n      tension: 0.4\n    }]\n  };\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: false\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"logo\",\n          className: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"InnovaFactory Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user\",\n        children: \"\\uD83D\\uDC64 Usuario\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sensor-carrusel\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scrolling-strip\",\n        children: filteredSensors.map((s, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `sensor-card ${s.status === 'ALERT' ? 'alert' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: s.sensor_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [s.value, \" \", s.unit]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `status ${s.status.toLowerCase()}`,\n            children: s.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alerts-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\uD83D\\uDEA8 Alertas activas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: alerts.map((alert, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"\\uD83D\\uDD34 \", alert.sensor_id, \" en \", alert.zone, \" \\u2192 \", alert.value, alert.unit]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"history-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\uD83D\\uDD53 Historial de lecturas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Sensor\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Valor\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Hora\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: displayedRows.map((row, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: row.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [row.value, \" \", row.unit]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: row.time\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 21\n                }, this)]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"zone-selector\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Zona:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: e => setSelectedZone(e.target.value),\n            value: selectedZone,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Almac\\xE9n A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Zona B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Zona C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Motor A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Motor B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Horno A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Zona T\\xE9cnica\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\uD83D\\uDCC8 Evoluci\\xF3n de temperatura (Temp_01)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            data: tempChartData,\n            options: options\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"HpAXRvDXBSISuGVu5dfD+vZm6mM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Chart","ChartJS","LineElement","CategoryScale","LinearScale","PointElement","Line","logo","jsxDEV","_jsxDEV","register","App","_s","sensors","setSensors","filteredSensors","filter","s","zone","selectedZone","alerts","setAlerts","setSelectedZone","tempHistory","setTempHistory","displayedRows","setDisplayedRows","fetchData","res","fetch","data","json","temp","find","sensor_id","prev","updated","value","time","Date","timestamp","toLocaleTimeString","slice","fetchAlerts","updateDisplayedRows","recent","includes","map","id","unit","sensorInterval","setInterval","alertInterval","historyInterval","clearInterval","tempChartData","labels","d","datasets","label","borderColor","backgroundColor","tension","options","responsive","plugins","legend","display","scales","y","beginAtZero","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","i","status","toLowerCase","alert","row","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/Mary/Downloads/innova-iot-dashboard-v17/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport {\n  Chart as ChartJS,\n  LineElement,\n  CategoryScale,\n  LinearScale,\n  PointElement\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport logo from './logo.png';\n\nChartJS.register(LineElement, CategoryScale, LinearScale, PointElement);\n\nfunction App() {\n  const [sensors, setSensors] = useState([]);\n  const filteredSensors = sensors.filter(s => s.zone === selectedZone);\n  const [alerts, setAlerts] = useState([]);\n  const [selectedZone, setSelectedZone] = useState('AlmacÃ©n A');\n  const [tempHistory, setTempHistory] = useState([]);\n  const [displayedRows, setDisplayedRows] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const res = await fetch('http://localhost:3000/api/sensors');\n      const data = await res.json();\n      setSensors(data);\n\n      const temp = data.find(s => s.sensor_id === 'Temp_01');\n      if (temp) {\n        setTempHistory(prev => {\n          const updated = [...prev, { value: temp.value, time: new Date(temp.timestamp).toLocaleTimeString() }];\n          return updated.slice(-10);\n        });\n      }\n    };\n\n    const fetchAlerts = async () => {\n      const res = await fetch('http://localhost:3000/api/alerts');\n      const data = await res.json();\n      setAlerts(data);\n    };\n\n    const updateDisplayedRows = async () => {\n      const res = await fetch('http://localhost:3000/api/sensors');\n      const data = await res.json();\n      const recent = data.filter(s =>\n        ['Temp_01', 'Vib_01', 'Hum_01'].includes(s.sensor_id)\n      ).map(s => ({\n        id: s.sensor_id,\n        value: s.value,\n        unit: s.unit,\n        time: new Date(s.timestamp).toLocaleTimeString()\n      }));\n      setDisplayedRows(recent.slice(0, 3));\n    };\n\n    fetchData();\n    fetchAlerts();\n    updateDisplayedRows();\n    const sensorInterval = setInterval(fetchData, 5000);\n    const alertInterval = setInterval(fetchAlerts, 5000);\n    const historyInterval = setInterval(updateDisplayedRows, 30000);\n\n    return () => {\n      clearInterval(sensorInterval);\n      clearInterval(alertInterval);\n      clearInterval(historyInterval);\n    };\n  }, []);\n\n  const tempChartData = {\n    labels: tempHistory.map(d => d.time),\n    datasets: [{\n      label: 'Temp_01',\n      data: tempHistory.map(d => d.value),\n      borderColor: 'rgba(54, 162, 235, 1)',\n      backgroundColor: 'rgba(54, 162, 235, 0.2)',\n      tension: 0.4\n    }]\n  };\n\n  const options = {\n    responsive: true,\n    plugins: { legend: { display: false } },\n    scales: { y: { beginAtZero: false } }\n  };\n\n  return (\n    <div className=\"App\">\n      <header>\n        <div className=\"logo-section\">\n          <img src={logo} alt=\"logo\" className=\"logo\" />\n          <h1>InnovaFactory Dashboard</h1>\n        </div>\n        <div className=\"user\">ð¤ Usuario</div>\n      </header>\n\n      <div className=\"sensor-carrusel\">\n        <div className=\"scrolling-strip\">\n          {filteredSensors.map((s, i) => (\n            <div className={`sensor-card ${s.status === 'ALERT' ? 'alert' : ''}`} key={i}>\n              <p>{s.sensor_id}</p>\n              <h2>{s.value} {s.unit}</h2>\n              <span className={`status ${s.status.toLowerCase()}`}>{s.status}</span>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"dashboard-body\">\n        <div className=\"left-section\">\n          <div className=\"alerts-section\">\n            <h2>ð¨ Alertas activas</h2>\n            <ul>\n              {alerts.map((alert, i) => (\n                <li key={i}>\n                  ð´ {alert.sensor_id} en {alert.zone} â {alert.value}{alert.unit}\n                </li>\n              ))}\n            </ul>\n          </div>\n\n          <div className=\"history-section\">\n            <h2>ð Historial de lecturas</h2>\n            <table>\n              <thead>\n                <tr>\n                  <th>Sensor</th>\n                  <th>Valor</th>\n                  <th>Hora</th>\n                </tr>\n              </thead>\n              <tbody>\n                {displayedRows.map((row, i) => (\n                  <tr key={i}>\n                    <td>{row.id}</td>\n                    <td>{row.value} {row.unit}</td>\n                    <td>{row.time}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n        <div className=\"right-section\">\n          <div className=\"zone-selector\">\n            <label>Zona:</label>\n            <select onChange={(e) => setSelectedZone(e.target.value)} value={selectedZone}>\n              <option>AlmacÃ©n A</option>\n              <option>Zona B</option>\n              <option>Zona C</option>\n              <option>Motor A</option>\n              <option>Motor B</option>\n              <option>Horno A</option>\n              <option>Zona TÃ©cnica</option>\n            </select>\n          </div>\n\n          <div className=\"chart-section\">\n            <h2>ð EvoluciÃ³n de temperatura (Temp_01)</h2>\n            <Line data={tempChartData} options={options} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}