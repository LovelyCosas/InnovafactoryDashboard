{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mary\\\\Downloads\\\\innova-iot-dashboard-v17\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { Chart as ChartJS, LineElement, CategoryScale, LinearScale, PointElement } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport logo from './logo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(LineElement, CategoryScale, LinearScale, PointElement);\nfunction App() {\n  _s();\n  const [sensors, setSensors] = useState([]);\n  const [alerts, setAlerts] = useState([]);\n  const [selectedZone, setSelectedZone] = useState('Almacén A');\n  const [tempHistory, setTempHistory] = useState([]);\n  const [displayedRows, setDisplayedRows] = useState([]);\n  const [currentSensorIndex, setCurrentSensorIndex] = useState(0);\n  useEffect(() => {\n    const fetchData = async () => {\n      const res = await fetch('http://localhost:3000/api/sensors');\n      const data = await res.json();\n      setSensors(data);\n      const temp = data.find(s => s.sensor_id === 'Temp_01');\n      if (temp) {\n        setTempHistory(prev => {\n          const updated = [...prev, {\n            value: temp.value,\n            time: new Date(temp.timestamp).toLocaleTimeString()\n          }];\n          return updated.slice(-60); // Mantener última hora\n        });\n      }\n    };\n    const fetchAlerts = async () => {\n      const res = await fetch('http://localhost:3000/api/alerts');\n      const data = await res.json();\n      setAlerts(data);\n    };\n    const updateDisplayedRows = async () => {\n      const res = await fetch('http://localhost:3000/api/sensors');\n      const data = await res.json();\n      const recent = data.filter(s => ['Temp_01', 'Vib_01', 'Hum_01'].includes(s.sensor_id)).map(s => ({\n        id: s.sensor_id,\n        value: s.value,\n        unit: s.unit,\n        time: new Date(s.timestamp).toLocaleTimeString()\n      }));\n      setDisplayedRows(recent.slice(0, 3));\n    };\n\n    // Auto-scroll para los sensores\n    const scrollInterval = setInterval(() => {\n      setCurrentSensorIndex(prev => (prev + 1) % Math.max(sensors.length - 3, 1));\n    }, 3000);\n    fetchData();\n    fetchAlerts();\n    updateDisplayedRows();\n    const sensorInterval = setInterval(fetchData, 5000);\n    const alertInterval = setInterval(fetchAlerts, 5000);\n    const historyInterval = setInterval(updateDisplayedRows, 30000);\n    return () => {\n      clearInterval(sensorInterval);\n      clearInterval(alertInterval);\n      clearInterval(historyInterval);\n      clearInterval(scrollInterval);\n    };\n  }, [sensors.length]);\n  const tempChartData = {\n    labels: tempHistory.map(d => d.time),\n    datasets: [{\n      label: 'Temp_01',\n      data: tempHistory.map(d => d.value),\n      borderColor: 'rgba(54, 162, 235, 1)',\n      backgroundColor: 'rgba(54, 162, 235, 0.2)',\n      tension: 0.4\n    }]\n  };\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: false\n      }\n    }\n  };\n\n  // Filtrar sensores por zona y mostrar solo 4 a la vez\n  const filteredSensors = sensors.filter(s => s.zone === selectedZone);\n  const visibleSensors = filteredSensors.slice(currentSensorIndex, currentSensorIndex + 4);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"logo\",\n          className: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"InnovaFactory Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user\",\n        children: \"\\uD83D\\uDC64 Usuario\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sensor-carrusel\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scrolling-strip\",\n        children: visibleSensors.map((s, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `sensor-card ${s.status === 'ALERT' ? 'alert' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: s.sensor_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [s.value, \" \", s.unit]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `status ${s.status.toLowerCase()}`,\n            children: s.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alerts-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\uD83D\\uDEA8 Alertas activas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: alerts.map((alert, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"\\uD83D\\uDD34 \", alert.sensor_id, \" en \", alert.zone, \" \\u2192 \", alert.value, alert.unit]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"history-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\uD83D\\uDD53 Historial de lecturas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Sensor\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Valor\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Hora\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: displayedRows.map((row, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: row.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [row.value, \" \", row.unit]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: row.time\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 21\n                }, this)]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"zone-selector\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Zona:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: e => setSelectedZone(e.target.value),\n            value: selectedZone,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Almac\\xE9n A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Zona B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Zona C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Motor A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Motor B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Horno A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Zona T\\xE9cnica\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\uD83D\\uDCC8 Evoluci\\xF3n de temperatura (\\xFAltima hora)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            data: tempChartData,\n            options: options\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"KuO6RGLs+o3eI7KfrUKMDK1D7TM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Chart","ChartJS","LineElement","CategoryScale","LinearScale","PointElement","Line","logo","jsxDEV","_jsxDEV","register","App","_s","sensors","setSensors","alerts","setAlerts","selectedZone","setSelectedZone","tempHistory","setTempHistory","displayedRows","setDisplayedRows","currentSensorIndex","setCurrentSensorIndex","fetchData","res","fetch","data","json","temp","find","s","sensor_id","prev","updated","value","time","Date","timestamp","toLocaleTimeString","slice","fetchAlerts","updateDisplayedRows","recent","filter","includes","map","id","unit","scrollInterval","setInterval","Math","max","length","sensorInterval","alertInterval","historyInterval","clearInterval","tempChartData","labels","d","datasets","label","borderColor","backgroundColor","tension","options","responsive","plugins","legend","display","scales","y","beginAtZero","filteredSensors","zone","visibleSensors","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","i","status","toLowerCase","alert","row","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/Mary/Downloads/innova-iot-dashboard-v17/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport {\n  Chart as ChartJS,\n  LineElement,\n  CategoryScale,\n  LinearScale,\n  PointElement\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport logo from './logo.png';\n\nChartJS.register(LineElement, CategoryScale, LinearScale, PointElement);\n\nfunction App() {\n  const [sensors, setSensors] = useState([]);\n  const [alerts, setAlerts] = useState([]);\n  const [selectedZone, setSelectedZone] = useState('Almacén A');\n  const [tempHistory, setTempHistory] = useState([]);\n  const [displayedRows, setDisplayedRows] = useState([]);\n  const [currentSensorIndex, setCurrentSensorIndex] = useState(0);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const res = await fetch('http://localhost:3000/api/sensors');\n      const data = await res.json();\n      setSensors(data);\n\n      const temp = data.find(s => s.sensor_id === 'Temp_01');\n      if (temp) {\n        setTempHistory(prev => {\n          const updated = [...prev, { value: temp.value, time: new Date(temp.timestamp).toLocaleTimeString() }];\n          return updated.slice(-60); // Mantener última hora\n        });\n      }\n    };\n\n    const fetchAlerts = async () => {\n      const res = await fetch('http://localhost:3000/api/alerts');\n      const data = await res.json();\n      setAlerts(data);\n    };\n\n    const updateDisplayedRows = async () => {\n      const res = await fetch('http://localhost:3000/api/sensors');\n      const data = await res.json();\n      const recent = data.filter(s =>\n        ['Temp_01', 'Vib_01', 'Hum_01'].includes(s.sensor_id)\n      ).map(s => ({\n        id: s.sensor_id,\n        value: s.value,\n        unit: s.unit,\n        time: new Date(s.timestamp).toLocaleTimeString()\n      }));\n      setDisplayedRows(recent.slice(0, 3));\n    };\n\n    // Auto-scroll para los sensores\n    const scrollInterval = setInterval(() => {\n      setCurrentSensorIndex(prev => (prev + 1) % Math.max(sensors.length - 3, 1));\n    }, 3000);\n\n    fetchData();\n    fetchAlerts();\n    updateDisplayedRows();\n    const sensorInterval = setInterval(fetchData, 5000);\n    const alertInterval = setInterval(fetchAlerts, 5000);\n    const historyInterval = setInterval(updateDisplayedRows, 30000);\n\n    return () => {\n      clearInterval(sensorInterval);\n      clearInterval(alertInterval);\n      clearInterval(historyInterval);\n      clearInterval(scrollInterval);\n    };\n  }, [sensors.length]);\n\n  const tempChartData = {\n    labels: tempHistory.map(d => d.time),\n    datasets: [{\n      label: 'Temp_01',\n      data: tempHistory.map(d => d.value),\n      borderColor: 'rgba(54, 162, 235, 1)',\n      backgroundColor: 'rgba(54, 162, 235, 0.2)',\n      tension: 0.4\n    }]\n  };\n\n  const options = {\n    responsive: true,\n    plugins: { legend: { display: false } },\n    scales: { y: { beginAtZero: false } }\n  };\n\n  // Filtrar sensores por zona y mostrar solo 4 a la vez\n  const filteredSensors = sensors.filter(s => s.zone === selectedZone);\n  const visibleSensors = filteredSensors.slice(currentSensorIndex, currentSensorIndex + 4);\n\n  return (\n    <div className=\"App\">\n      <header>\n        <div className=\"logo-section\">\n          <img src={logo} alt=\"logo\" className=\"logo\" />\n          <h1>InnovaFactory Dashboard</h1>\n        </div>\n        <div className=\"user\">👤 Usuario</div>\n      </header>\n\n      <div className=\"sensor-carrusel\">\n        <div className=\"scrolling-strip\">\n          {visibleSensors.map((s, i) => (\n            <div className={`sensor-card ${s.status === 'ALERT' ? 'alert' : ''}`} key={i}>\n              <p>{s.sensor_id}</p>\n              <h2>{s.value} {s.unit}</h2>\n              <span className={`status ${s.status.toLowerCase()}`}>{s.status}</span>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"dashboard-body\">\n        <div className=\"left-section\">\n          <div className=\"alerts-section\">\n            <h2>🚨 Alertas activas</h2>\n            <ul>\n              {alerts.map((alert, i) => (\n                <li key={i}>\n                  🔴 {alert.sensor_id} en {alert.zone} → {alert.value}{alert.unit}\n                </li>\n              ))}\n            </ul>\n          </div>\n\n          <div className=\"history-section\">\n            <h2>🕓 Historial de lecturas</h2>\n            <table>\n              <thead>\n                <tr>\n                  <th>Sensor</th>\n                  <th>Valor</th>\n                  <th>Hora</th>\n                </tr>\n              </thead>\n              <tbody>\n                {displayedRows.map((row, i) => (\n                  <tr key={i}>\n                    <td>{row.id}</td>\n                    <td>{row.value} {row.unit}</td>\n                    <td>{row.time}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n        <div className=\"right-section\">\n          <div className=\"zone-selector\">\n            <label>Zona:</label>\n            <select onChange={(e) => setSelectedZone(e.target.value)} value={selectedZone}>\n              <option>Almacén A</option>\n              <option>Zona B</option>\n              <option>Zona C</option>\n              <option>Motor A</option>\n              <option>Motor B</option>\n              <option>Horno A</option>\n              <option>Zona Técnica</option>\n            </select>\n          </div>\n\n          <div className=\"chart-section\">\n            <h2>📈 Evolución de temperatura (última hora)</h2>\n            <Line data={tempChartData} options={options} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}